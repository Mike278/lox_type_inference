====== advent_of_code_2021_day_2.lox =====
150
====== advent_of_code_2024_day_1.lox =====
[3, 4, 2, 1, 3, 3]
[4, 3, 5, 3, 9, 3]
====== advent_of_code_2024_day_2.lox =====
2
4
====== basic_test.lox =====
null
1
null
1
1
null
1
null
1
1
null
1
2
null
3
3
assignment!
=== false or is_great(); ===
side effect!
true
=== false and is_great(); ===
false
=== true or is_great(); ===
true
=== true and is_great(); ===
side effect!
true
====== if.lox =====
a
b
1
2
3
b
====== imports.lox =====
[2, 4, 6]
{hello_from_relative: yep}
yep
1
====== lambdas.lox =====
11
111
222
123
123
124
177
123
1
hello
1
123
30
1994
====== lists.lox =====
[1, 2, 3]
[3, 2, 1]
[]
[1]
[its a `.Hello` tag, its not]
[true, false, false]
[true, false]
{name: jane, age: 60}
60
60
30
{name: mike, age: 30}
-2
2
[1] \> List.first \> id
1
1 \> x_minus_one \> x_minus_one
-1
[1] \> List.first \> id \> sub(_, 1)
0
[false]
[false]
====== make_counter.lox =====
___ Type checking failed ___
Recursive row types:
_5
_10 -> _5
___ Continuing with execution ___
1
2
3
====== patterns.lox =====
a - abc123 (VINTAGE)
====== records.lox =====
{a: one, b: 2, c: false, d: (arity: 0, impl: Closure: (List<Object?>) => Object?)}
one
(arity: 0, impl: Closure: (List<Object?>) => Object?)
123
123
joe
null
1
joe
==========
1
null
1
1
{}
{}
====== return_expr.lox =====
.TheData(some default data)
====== scoping.lox =====
global
global
====== tags.lox =====
\t
bottom
bottom
green