// Create a variant
let color = .green;



// Variants can accumulate other variants
let either = if some_condition() then color else .red;



// Variants can have a payload
let event =
    if
        some_condition()
    then
        .key("\n")
    else
        .mouse({ x: 50, y: 50 })
    ;



// Use the match keyword to examine each possible variant
print match either {
    .green -> 0,
    .red -> 1,
};


print match event {
    .key(char) -> char,
    .mouse({ x }) -> if x > 50 then "top" else "bottom",
};



// Or examine only some possible variants and
// handle the rest with a final catch-all branch
print match either {
    .green -> .good,
    other -> other,
};


print match event {
    .key(char) -> char,
    _ -> "<ignored>"
};



let some_condition = \ -> true;