let {join} = import "util/lists.lox";

let describe = \{as_of: current_year} -> \robot {
    let {
        name: { label },
        manufacture_date: { year: creation_year },
        serial_number,
    } = robot;
    let is_old_tech = current_year - creation_year > 1;
    return [label, " - ", serial_number, is_old_tech ? " (VINTAGE)" : " (NEW)"] \> join;
};

let robot = {
    name: {
        label: "a",
        title: "b",
        version: "c",
    },
    manufacture_date: {
        year: 2020,
        month: 01,
        day: 01,
    },
    serial_number: "abc123",
};

let description = robot \> describe({as_of: 2025});
print description;
assert description == "a - abc123 (VINTAGE)";


let _ = 1;
let _ = 1;
let _ = "1";
let discard_param = \_ -> 1;
assert discard_param("f") == 1;
assert discard_param([]) == 1;

let f01 = \{a} -> 1+a;
let f02 = \{a} { return 1+a; };
let f03 = \{a: b} -> 1+b;
let f04 = \{a: b} { return 1+b; };

assert f01({a: 1}) == 2;
assert f02({a: 1}) == 2;
assert f03({a: 1}) == 2;
assert f04({a: 1}) == 2;

let f06 = \x, {a} -> 1+a+x;
let f07 = \x, {a} { return 1+a+x; };
let f08 = \x, {a: b} -> 1+b+x;
let f09 = \x, {a: b} { return 1+b+x; };

assert f06(1, {a: 1}) == 3;
assert f07(1, {a: 1}) == 3;
assert f08(1, {a: 1}) == 3;
assert f09(1, {a: 1}) == 3;

let f10 = \{a}, x -> 1+a+x;
let f11 = \{a}, x { return 1+a+x; };
let f12 = \{a: b}, x -> 1+b+x;
let f13 = \{a: b}, x { return 1+b+x; };

assert f10({a: 1}, 1) == 3;
assert f11({a: 1}, 1) == 3;
assert f12({a: 1}, 1) == 3;
assert f13({a: 1}, 1) == 3;

