
let tab = .Key("\t");
let center = .Mouse({x: 50, y: 50});
let key_or_mouse = false ? tab : center;

let fn = \e -> match e {
    .Key(char) -> char,
    .Mouse({x}) -> x > 50 ? "top" : "bottom",
};

print fn(tab);
print fn(center);
print fn(key_or_mouse);

let colors = [.Green, .Gold, .Red];
let fav_color = colors \> List.first;
print match fav_color {
    .Green -> "green",
    .Gold -> "gold",
    .Red -> "red",
};

assert match fav_color { .Gold -> 1, _ -> 2 } == 2;

assert match [
    .Dark(.Some("oh")),
    .Light(.None),
    .Dark(.None),
    .Dark(.Some("hi")),
    .Dark(.None),
    .Light(.Some("ok")),
    .Light(.Some("yep")),
] \> List.first {
    .Light(str)-> match str {
        .Some(_) -> 1,
        .None -> 2,
    },
    .Dark(str) -> match str {
        .Some(_) -> 3,
        .None -> 4,
    },
} == 3;

assert match [
    .Dark({title: .Some("oh"), subtitle: "hmm"}),
    .Light({title: .None, subtitle: "hmm"}),
    .Dark({title: .None, subtitle: "hmm"}),
    .Dark({title: .Some("hi"), subtitle: "hmm"}),
    .Dark({title: .None, subtitle: "hmm"}),
    .Light({title: .Some("ok"), subtitle: "hmm"}),
    .Light({title: .Some("yep"), subtitle: "hmm"}),
] \> List.first {
    .Light({title}) -> match title {
        .Some(_) -> 1,
        .None -> 2,
    },
    .Dark({title}) -> match title {
        .Some(_) -> 3,
        .None -> 4,
    },
} == 3;

assert match [
    .Dark({title: .Some("oh"), subtitle: "hmm"}),
    .Light({title: .None, subtitle: "hmm"}),
    .Dark({title: .None, subtitle: "hmm"}),
    .Dark({title: .Some("hi"), subtitle: "hmm"}),
    .Dark({title: .None, subtitle: "hmm"}),
    .Light({title: .Some("ok"), subtitle: "hmm"}),
    .Light({title: .Some("yep"), subtitle: "hmm"}),
] \> List.first {
    .Dark({title})  -> 1,
    .Light({title}) -> 2,
} == 1;
