let {zip_with_tail, count_where, first, all} = import "util/lists.lox";
let {minus, sign, abs} = import "util/numeric.lox";

let input = [
    [7, 6, 4, 2, 1],
    [1, 2, 7, 8, 9],
    [9, 7, 6, 2, 1],
    [1, 3, 2, 4, 5],
    [8, 6, 4, 4, 1],
    [1, 3, 6, 7, 9],
];

let is_safe = \list {
    let diffs = list \> zip_with_tail(_, minus);
    let first_direction = diffs \> first \> sign;
    return all(
        diffs,
        \diff -> (diff \> sign) == first_direction
             and (diff \> abs) >= 1
             and (diff \> abs) <= 3
    );
};

/////// Part 1 ///////

let total_safe = input \> count_where(_, is_safe);
print total_safe;
assert total_safe == 2;